
unsafe.Pointer的基本运行时原则:
	1. 保证要使用的值在unsafe操作前后时刻要被有效的指针引用着，无论类型安全指针还是非类型安全指针，否则此值有可能被垃圾回收器回收掉。
	2. 任何指针都不应该引用未知内存块。


非类型安全指针相关的事实:
    1. 非类型安全指针是指针和普通指针一样。 但uintptr值是整数， 整数从不会引用其他值
    2. 不再被使用的内存块的回收时间点是不确定的。
    3. 某些值的地址在程序运行中可能发生改变
    4. 一个值的生命范围可能并没有代码中看上去的范围大
    5。 *unsafe.Pointer是一个类型安全指针类型，它的基类型是unsafe.Pointer





